%{
num _binop(num left, List right) {
  for(var r in right) {
    if(r[0] != null && r[0].isNotEmpty) {
      switch(r[0]) {
        case "+":
          left += r[1];
          break;
        case "-":
          left -= r[1];
          break;
        case "*":
          left *= r[1];
          break;
        case "/":
          left /= r[1];
          break;
        default:
          throw "Unsupported operation $r[0]";
      }
    }
  }
  return left;
}

}%

### Sentences (nonterminals) ###

Start <-
  LEADING_SPACES? Additive EOF { $$ = $2; }

Additive <-
  Multiplicative ((PLUS / MINUS) Multiplicative)* { $$ = _binop($1, $2); }
  / Multiplicative

Multiplicative <-
  Atom ((MUL / DIV) Atom)* { $$ = _binop($1, $2); }
  / Atom

Atom <-
  NUMBER
  / OPEN Additive CLOSE { $$ = $2; }

### Lexemes (tokens) ###

CLOSE <-
  ')' WS

DIV <-
  '/' WS { $$ = $1; }

EOF <-
  !.

LEADING_SPACES <-
  WS

MINUS <-
  '-' WS { $$ = $1; }

MUL <-
  '*' WS { $$ = $1; }

NUMBER <-
  [0-9]+ WS { $$ = int.parse($1.join()); }

OPEN <-
  '(' WS

PLUS <-
  '+' WS { $$ = $1; }

### Morphemes ###

WS <-
  ([\t-\n\r ] / '\r\n')*

